<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>buildah on Better Tomorrow with Computer Science</title>
    <link>/tags/buildah/</link>
    <description>Recent content in buildah on Better Tomorrow with Computer Science</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Mon, 09 Nov 2020 15:09:00 +0900</lastBuildDate><atom:link href="/tags/buildah/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Building Container Image inside Container using Buildah</title>
      <link>/2020-11-09/building-container-image-inside-container-using-buildah/</link>
      <pubDate>Mon, 09 Nov 2020 15:09:00 +0900</pubDate>
      
      <guid>/2020-11-09/building-container-image-inside-container-using-buildah/</guid>
      <description>This post explains how we build a container image inside a container, isolating all dependent packages into the container.
The introduction below clearly shows why it is required.
Lots of people would like to build OCI/container images within a system like Kubernetes. Imagine you have a CI/CD system that is constantly building container images, a tool like Red Hat OpenShift/Kubernetes would be useful for distributing the load of builds. Until recently, most people were leaking the Docker socket into the container and then allowing the containers to do docker build.</description>
    </item>
    
  </channel>
</rss>
