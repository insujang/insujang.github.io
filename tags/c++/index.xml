<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>c&#43;&#43; on Better Tomorrow with Computer Science</title>
    <link>/tags/c&#43;&#43;/</link>
    <description>Recent content in c&#43;&#43; on Better Tomorrow with Computer Science</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Sat, 12 Mar 2022 10:40:00 -0500</lastBuildDate><atom:link href="/tags/c++/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Implementing Basic RPC with C&#43;&#43;20</title>
      <link>/2022-03-12/implementing-basic-rpc-with-c-20/</link>
      <pubDate>Sat, 12 Mar 2022 10:40:00 -0500</pubDate>
      
      <guid>/2022-03-12/implementing-basic-rpc-with-c-20/</guid>
      <description>This post explains how a basic RPC framework can be implemented by using modern C++ functionalities. The explanation in this post is heavily inspired from:
simple-rpc by evenleo buttonrpc-cpp14 by button-chen C++ Features used # Parameter Pack 1 # Parameter pack is similar to C variadic arguments that are used in printf() family:
int printf(char *format, ...); which is implemented with va_ variadic function API [src]:
int printf(const char* format, .</description>
    </item>
    
  </channel>
</rss>
