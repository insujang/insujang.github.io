<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>cmake on Better Tomorrow with Computer Science</title>
    <link>/tags/cmake/</link>
    <description>Recent content in cmake on Better Tomorrow with Computer Science</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Tue, 10 Dec 2019 15:04:00 +0900</lastBuildDate><atom:link href="/tags/cmake/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Cmake for Custom Library Build System in Go</title>
      <link>/2019-12-10/cmake-for-custom-library-build-system-in-go/</link>
      <pubDate>Tue, 10 Dec 2019 15:04:00 +0900</pubDate>
      
      <guid>/2019-12-10/cmake-for-custom-library-build-system-in-go/</guid>
      <description>In the previous post, I implemented a Go shim layer that enables c++ codes to use Go functionalities. This post dives a little bit deeper into CMake build system for this interaction.
The following CMakeLists.txt provides a binary compilation altogether with compiling Go based static library.
cmake_minimum_required(VERSION 3.0) project(test) set(TARGET_OUT test.out) set(TARGET_LIB test.lib) # Go configurations set(GO_SRCS test.go) set(GO_LIBNAME libtest.a) # Custom command for &amp;#39;go build -buildmode=c-archive ...&amp;#39; # to create a library from Go codes.</description>
    </item>
    
  </channel>
</rss>
